# -*- coding: utf-8 -*-
"""problem_8a

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t3XHcM51Ookvbzr9CTB9IH2Hay9GJRDo
"""

# Gaussian without pivoting
import numpy as np
def gaussian_without_pivot(A,b):
  n = A.shape
  for k in range(n[0]-1):
    for i in range(k+1,n[0]):
      atemp = A[i][k]/A[k][k]
      A[i][k] = atemp
      for j in range(k+1,n[0]):
        A[i][j] = A[i][j] - atemp*A[k][j]
      b[i] = b[i]-atemp*b[k]
      
  x = np.zeros(n[0])
  x[n[0]-1] = b[n[0]-1]/A[n[0]-1][n[0]-1]
  i = n[0]-2
  while i >= 0:
    sum =  b[i]
    for j in range(i + 1,n[0]):
      sum = sum - A[i][j] * x[j]
    x[i] = round(sum/A[i][i],2)
    i-=1
  return x